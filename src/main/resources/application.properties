# ===============================
# = Stellar Network
# ===============================

stellar.network.url = https://horizon-testnet.stellar.org
stellar.network.friendbot=https://horizon-testnet.stellar.org/friendbot?addr=%s

# ===============================
# = DB
# ===============================

# NOTE! I may need to change this to update if adding a new field
# This can be none, update, create, or create-drop. May want to switch it to update or none after initial run. (Use none for best practice)
# Link: https://spring.io/guides/gs/accessing-data-mysql/
spring.jpa.hibernate.ddl-auto=none 
# If Using MySql: --
    # spring.datasource.url=jdbc:mysql://localhost:3306/pattest
    # spring.datasource.username=PatTestAdmin
    # spring.datasource.password=password
# If Using MongoDB: --
# Authentication database name.
# spring.data.mongodb.authentication-database=pattest
# Database name.
spring.data.mongodb.database=pattest
# Fully qualified name of the FieldNamingStrategy to use.
#spring.data.mongodb.field-naming-strategy=
# GridFS database name.
#spring.data.mongodb.grid-fs-database=
# Mongo server host.
spring.data.mongodb.host=localhost
# Login user of the mongo server.
spring.data.mongodb.username=PatTestAdmin
# Login pw of the mongo server
spring.data.mongodb.password=password
# Mongo server port.
spring.data.mongodb.port=27017
# Enable Mongo repositories.
#spring.data.mongodb.repositories.enabled=false
# Mongo database URI. When set, host and port are ignored.
#spring.data.mongodb.uri=mongodb://PatTestAdmin:password@localhost/pattest


# ===============================
# = Logging
# ===============================

#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework=DEBUG

# ===============================
# = SERVER DETAILS
# ===============================
#Change here if diff port is needed
server.port = 8080
#This is for the /health or /beans endpoints
management.port = 8081 
spring.mvc.throwExceptionIfNoHandlerFound=true
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

# ===============================
# = SQL PROPERTIES
# ===============================
hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = Database PROPERTIES
# ===============================

#Basic Spring Boot Config for Oracle
#spring.datasource.url= jdbc:oracle:thin:@10.183.155.219:1521:orcl
#spring.datasource.username=user
#spring.datasource.password=pass
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
## Show or not log for each sql query
#spring.jpa.show-sql=true
## Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
## schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
## Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect?




